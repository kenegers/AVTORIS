<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="LadeaDataSet2" targetNamespace="http://tempuri.org/LadeaDataSet2.xsd" xmlns:mstns="http://tempuri.org/LadeaDataSet2.xsd" xmlns="http://tempuri.org/LadeaDataSet2.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="LadeaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="LadeaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.AVTORIS.Properties.Settings.GlobalReference.Default.LadeaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="JOBTableAdapter" GeneratorDataComponentClassName="JOBTableAdapter" Name="JOB" UserDataComponentName="JOBTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="LadeaConnectionString (Settings)" DbObjectName="Ladea.dbo.JOB" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[JOB] WHERE (([Id_J] = @Original_Id_J) AND ([NAME] = @Original_NAME) AND ([PRICE] = @Original_PRICE))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_J" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_J" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NAME" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PRICE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PRICE" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[JOB] ([NAME], [PRICE]) VALUES (@NAME, @PRICE);
SELECT Id_J, NAME, PRICE FROM JOB WHERE (Id_J = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NAME" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PRICE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PRICE" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id_J, NAME, PRICE FROM dbo.JOB</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[JOB] SET [NAME] = @NAME, [PRICE] = @PRICE WHERE (([Id_J] = @Original_Id_J) AND ([NAME] = @Original_NAME) AND ([PRICE] = @Original_PRICE));
SELECT Id_J, NAME, PRICE FROM JOB WHERE (Id_J = @Id_J)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NAME" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PRICE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PRICE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id_J" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id_J" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NAME" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PRICE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PRICE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id_J" ColumnName="Id_J" DataSourceName="Ladea.dbo.JOB" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id_J" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id_J" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id_J" DataSetColumn="Id_J" />
              <Mapping SourceColumn="NAME" DataSetColumn="NAME" />
              <Mapping SourceColumn="PRICE" DataSetColumn="PRICE" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="LadeaDataSet2" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="LadeaDataSet2" msprop:Generator_UserDSName="LadeaDataSet2">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="JOB" msprop:Generator_TableClassName="JOBDataTable" msprop:Generator_TableVarName="tableJOB" msprop:Generator_TablePropName="JOB" msprop:Generator_RowDeletingName="JOBRowDeleting" msprop:Generator_RowChangingName="JOBRowChanging" msprop:Generator_RowEvHandlerName="JOBRowChangeEventHandler" msprop:Generator_RowDeletedName="JOBRowDeleted" msprop:Generator_UserTableName="JOB" msprop:Generator_RowChangedName="JOBRowChanged" msprop:Generator_RowEvArgName="JOBRowChangeEvent" msprop:Generator_RowClassName="JOBRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id_J" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId_J" msprop:Generator_ColumnPropNameInRow="Id_J" msprop:Generator_ColumnPropNameInTable="Id_JColumn" msprop:Generator_UserColumnName="Id_J" type="xs:int" />
              <xs:element name="NAME" msprop:Generator_ColumnVarNameInTable="columnNAME" msprop:Generator_ColumnPropNameInRow="NAME" msprop:Generator_ColumnPropNameInTable="NAMEColumn" msprop:Generator_UserColumnName="NAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PRICE" msprop:Generator_ColumnVarNameInTable="columnPRICE" msprop:Generator_ColumnPropNameInRow="PRICE" msprop:Generator_ColumnPropNameInTable="PRICEColumn" msprop:Generator_UserColumnName="PRICE" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:JOB" />
      <xs:field xpath="mstns:Id_J" />
    </xs:unique>
  </xs:element>
</xs:schema>